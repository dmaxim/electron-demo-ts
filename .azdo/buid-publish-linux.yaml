
trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  publishPath: 'readit-two/out/make'
  debPath: 'deb/x64/readit-two_$(VERSION_TAG)_amd64.deb'
  rpmPath: 'rpm/x64/readit-two-$(VERSION_TAG)-1.x86_64.rpm'
  version: $(VERSION_TAG)

stages:
  - stage: Build
    displayName: Build Desktop Application

    jobs:
      - job: build
        displayName: 'Build and Publish'
        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "21.x"
          

          - task: Npm@1
            displayName: 'Install desktop app depedencies'
            inputs:
              command: 'install'
              workingDir: 'readit-two'

          - task: CmdLine@2
            displayName: 'Publish to Application'
            inputs:
              script: 'npm run publish'
              workingDirectory: 'readit-two'

              
          # - task: CopyFiles@2
          #   inputs:
          #     sourceFolder: '$(Build.SourcesDirectory)'
          #     contents: |
          #       dist/*
          #     targetFolder: '$(Build.ArtifactStagingDirectory)'
          #   displayName: 'Copy output files'
          


          # - task: CmdLine@2
          #   displayName: 'Sign Application'
          #   inputs:
          #     script: 'smctl sign --verbose --keypair-alias=$(KEYPAIR_ALIAS) --certificate=$(Agent.TempDirectory)\KeyCert.pem --config-file $(SSMClientToolsSetup.PKCS11_CONFIG) --input $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe.blockmap'
          #   env:
          #     SM_HOST: 'https://clientauth.one.digicert.com'
          #     SM_API_KEY: $(DIGICERT_API_KEY)
          #     SM_CLIENT_CERT_PASSWORD: $(DIGICERT_CERT_PASSWORD)
          #     SM_CLIENT_CERT_FILE: $(Client_Cert_File.secureFilePath)

          - task: CopyFiles@2
            inputs:
              sourceFolder: '$(Build.SourcesDirectory)'
              flattenFolders: false
              contents: |
                readit-two/out/make/**
              targetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: 'Copy output files'

          - task: PublishPipelineArtifact@1
            inputs:
              artifactName: electron-app
              targetPath: '$(Build.ArtifactStagingDirectory)'
              publishLocation: 'pipeline'
            displayName: 'Publish electron app artifact'

          - task: CmdLine@2
            displayName: "List contents of $(Build.ArtifactStagingDirectory)"
            inputs:
              script: 'dir $(Build.ArtifactStagingDirectory)/readit-two/out/make'


          - task: CmdLine@2
            displayName: 'Publish Deb to GitHub'
            inputs:
              script: 'gh release upload --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" "$(Build.ArtifactStagingDirectory)/$(publishPath)/$(debPath)"'
            env:
              GH_TOKEN: $(PUBLISH_TOKEN)



          - task: CmdLine@2
            displayName: 'Publish RPM to GitHub'
            inputs:
              script: 'gh release upload --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" "$(Build.ArtifactStagingDirectory)/$(publishPath)/$(rpmPath)"'
            env:
              GH_TOKEN: $(PUBLISH_TOKEN)

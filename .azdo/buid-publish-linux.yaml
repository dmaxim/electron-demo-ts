
trigger: none

pool:
  vmImage: 'ubuntu-latest'

variables:
  publishPath: 'readit-two/out/make'
  debPath: 'deb/x64/readit-two_$(VERSION_TAG)_amd64.deb'
  rpmPath: 'rpm/x64/readit-two-$(VERSION_TAG)-1.x86_64.rpm'
  version: $(VERSION_TAG)

stages:
  - stage: Build
    displayName: Build Desktop Application

    jobs:
      - job: CheckRelease
        displayName: 'Check Release'
        steps:
          - task: CmdLine@2
            displayName: 'Check for GitHub Release'
            continueOnError: true
            inputs:
              script: gh release view --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)"
            env:
              GH_TOKEN: $(PUBLISH_TOKEN)
            
      - job: CreateRelease
        displayName: 'Create Release'
        steps:
          - task: CmdLine@2
            displayName: 'Create Release'
            inputs:
              script: 'gh release create --draft --latest --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" --title "$(VERSION_TAG)" '
            env:
              GH_TOKEN: $(PUBLISH_TOKEN)
            dependsOn: CheckRelease
            condition: failed()

      - job: Publish
        steps:
          - task: CmdLine@2
            displayName: 'Publish Deb to GitHub'
            inputs:
              script: 'echo publishing'


          # - task: CmdLine@2
          #   displayName: 'Publish Deb to GitHub'
          #   inputs:
          #     script: 'gh release upload --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" "$(Build.ArtifactStagingDirectory)/$(publishPath)/$(debPath)"'
          #   env:
          #     GH_TOKEN: $(PUBLISH_TOKEN)



          # - task: CmdLine@2
          #   displayName: 'Publish RPM to GitHub'
          #   inputs:
          #     script: 'gh release upload --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" "$(Build.ArtifactStagingDirectory)/$(publishPath)/$(rpmPath)"'
          #   env:
          #     GH_TOKEN: $(PUBLISH_TOKEN)


trigger: none

pool:
  vmImage: 'windows-latest'

stages:
  - stage: Build
    displayName: Build Desktop Application

    jobs:
      - job: build
        displayName: 'Build and Publish'
        steps:
          - task: NodeTool@0
            displayName: "Install Node.js"
            inputs:
              versionSpec: "21.x"
          
          - task: DownloadSecureFile@1
            name: Client_Cert_File
            displayName: 'Download Service User Cert'
            inputs:
              secureFile: 'Certificate_pkcs12.p12'

          
          - task: SSMClientToolsSetup@1
            inputs:
              APIKey: $(DIGICERT_API_KEY)

          - task: SSMSigningToolsSetup@1
            inputs:
              APIKey: $(DIGICERT_API_KEY)

          - task: CmdLine@2
            displayName: 'Download Certificate'
            inputs:
              script: 'smctl certificate download --keypair-alias=$(KEYPAIR_ALIAS) --name=KeyCert.pem --out=$(Agent.TempDirectory)'
            env:
              SM_HOST: 'https://clientauth.one.digicert.com'
              SM_API_KEY: $(DIGICERT_API_KEY)
              SM_CLIENT_CERT_PASSWORD: $(DIGICERT_CERT_PASSWORD)
              SM_CLIENT_CERT_FILE: $(Client_Cert_File.secureFilePath)


          - task: Npm@1
            displayName: 'Install desktop app depedencies'
            inputs:
              command: 'install'
              workingDir: 'readit-two'

          # - task: Npm@1
          #   displayName: 'Build desktop app'
          #   inputs:
          #     command: 'custom'
          #     customCommand: 'run publish'
          #     workingDir: 'readit-two'

          - task: CmdLine@2
            displayName: 'Publish to GitHub'
            inputs:
              script: 'npm run publish'
            env:
              GITHUB_TOKEN: $(GITHUB_TOKEN)
              workingDirectory: 'readit-two'
              SM_HOST: 'https://clientauth.one.digicert.com'
              SM_API_KEY: $(DIGICERT_API_KEY)
              SM_CLIENT_CERT_PASSWORD: $(DIGICERT_CERT_PASSWORD)
              SM_CLIENT_CERT_FILE: $(Client_Cert_File.secureFilePath)

          # - task: CopyFiles@2
          #   inputs:
          #     sourceFolder: '$(Build.SourcesDirectory)'
          #     contents: |
          #       dist/*
          #     targetFolder: '$(Build.ArtifactStagingDirectory)'
          #   displayName: 'Copy output files'
          


          # - task: CmdLine@2
          #   displayName: 'Sign Application'
          #   inputs:
          #     script: 'smctl sign --verbose --keypair-alias=$(KEYPAIR_ALIAS) --certificate=$(Agent.TempDirectory)\KeyCert.pem --config-file $(SSMClientToolsSetup.PKCS11_CONFIG) --input $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe.blockmap'
          #   env:
          #     SM_HOST: 'https://clientauth.one.digicert.com'
          #     SM_API_KEY: $(DIGICERT_API_KEY)
          #     SM_CLIENT_CERT_PASSWORD: $(DIGICERT_CERT_PASSWORD)
          #     SM_CLIENT_CERT_FILE: $(Client_Cert_File.secureFilePath)

          # - task: PublishPipelineArtifact@1
          #   inputs:
          #     artifactName: electron-app
          #     targetPath: '$(Build.ArtifactStagingDirectory)'
          #     publishLocation: 'pipeline'
          #   displayName: 'Publish electron app artifact'

          # - task: CmdLine@2
          #   displayName: 'Publish to GitHub'
          #   inputs:
          #     script: 'gh release upload --repo $(GITHUB_REPOSITORY) "v$(VERSION_TAG)" $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe $(Build.ArtifactStagingDirectory)\dist\ReadIt-$(VERSION_TAG).exe.blockmap'
          #   env:
          #     GH_TOKEN: $(PUBLISH_TOKEN)



